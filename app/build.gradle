ext {

    commonsLangVersion = '3.5'
    commonsValidatorVersion = '1.5.1'

    guavaVersion = '21.0'
    findBugsVersion = '3.0.1'

    jugVersion = '3.1.4'

    logstashLogbackVersion = '4.8'
    janinoVersion = '3.0.6'

    jcacheVersion = '1.0.0'
    ehcacheVersion = '3.2.0'

    springfoxSwagger2Version = '2.6.1'

    webjarsJqueryVersion = '3.1.1-1'
    webjarsBootstrapVersion = '3.3.7-1'
    webjarsLocatorVersion = '0.32'
    webjarsFontAwesomeVersion = '4.7.0'
    webjarsModernizrVersion = '2.8.3'

    immutablesVersion = '2.4.2'

    hashidsVersion = '1.0.1'

    beansvizVersion = '0.1.0'
}

// Need to override version to be 5.2.3 or greater so that we can use "hibernate.jdbc.time_zone: UTC"
ext['hibernate.version'] = '5.2.9.Final'

dependencies {
    compile ('org.springframework.boot:spring-boot-starter-actuator')
    compile ('org.springframework.boot:spring-boot-starter-aop')
    compile ('org.springframework.boot:spring-boot-starter-web')
    compile ('org.springframework.boot:spring-boot-starter-cache')
    compile ('org.springframework.boot:spring-boot-starter-data-jpa')
    compile ("org.springframework.boot:spring-boot-starter-security")
    compile ('org.springframework.boot:spring-boot-starter-hateoas')
    compile ('org.springframework.data:spring-data-rest-hal-browser')

    compile ('org.springframework.boot:spring-boot-actuator-docs')

    compile ("com.h2database:h2")

    compile ('org.springframework.retry:spring-retry')

    compile ("net.logstash.logback:logstash-logback-encoder:${logstashLogbackVersion}")
    compile ("org.codehaus.janino:janino:${janinoVersion}")

    compile ("org.apache.commons:commons-lang3:${commonsLangVersion}")
    compile ("commons-validator:commons-validator:${commonsValidatorVersion}")
    compile ("com.fasterxml.uuid:java-uuid-generator:${jugVersion}")

    compile ("javax.cache:cache-api:${jcacheVersion}")
    compile ("org.ehcache:ehcache:${ehcacheVersion}")

    compile ("com.google.guava:guava:${guavaVersion}")
    compile ("com.google.code.findbugs:jsr305:${findBugsVersion}") // Needed for @Nullable

    compile ("org.webjars:jquery:${webjarsJqueryVersion}")
    compile ("org.webjars:bootstrap:${webjarsBootstrapVersion}")
    compile ("org.webjars:font-awesome:${webjarsFontAwesomeVersion}")
    compile ("org.webjars:modernizr:${webjarsModernizrVersion}")
    compile ("org.webjars:webjars-locator:${webjarsLocatorVersion}")

    compile ("io.springfox:springfox-swagger2:${springfoxSwagger2Version}")
    compile ("io.springfox:springfox-swagger-ui:${springfoxSwagger2Version}")

    compile ("org.hashids:hashids:${hashidsVersion}")

    compile ("am.ik.beansviz:beansviz-spring-boot-actuator:${beansvizVersion}")

    provided ("org.immutables:value:${immutablesVersion}")

    testCompile ('org.springframework.boot:spring-boot-starter-test')
    testCompile ("org.springframework.security:spring-security-test:${springSecurityTestVersion}")
    testCompile ("pl.pragmatists:JUnitParams:${junitParamsVersion}")
    testCompile ("org.meanbean:meanbean:${meanBeanVersion}")
    testCompile ("nl.jqno.equalsverifier:equalsverifier:${equalsVerifierVersion}")
    testCompile ("org.jsoup:jsoup:${jsoupVersion}")

    optional ("org.springframework.boot:spring-boot-devtools")
}


// Code analysis
apply from: 'gradle-segment/code-analysis.gradle'

// Publish to Nexus
apply from: 'gradle-segment/publish.gradle'

//sourceSets {
//	main {
//		java {
//			srcDirs 'src/main/java', 'generated'
//		}
//	}
//}

pitest {
    targetClasses = ['org.amhzing.clusterview.*']
    excludedClasses = ['org.amhzing.clusterview.smoketest.*']
    outputFormats = ['XML', 'HTML']
}

// Git properties that display in the actuator /info endpoint
gitProperties {
    dateFormat = "yyyy-MM-dd'T'HH:mm:ss.SSSZ z"
    dateFormatTimeZone = "UTC"
}

springBoot {

    mainClass = 'org.amhzing.clusterview.app.MainApplication'
}

// Make the System.properties available in the bootRun task.
bootRun {
    systemProperties = System.properties
}

// Since app is a spring boot executable jar then the repackaging needs to be run after all dependent projects are built
bootRepackage{
    enabled = false
}
