buildscript {
	ext {
		NEXUS_REPO_URL = 'http://192.168.1.31:8082/nexus/content/repositories'

		springBootVersion = '1.5.3.RELEASE'
		propDepsVersion = '0.0.8'
		pitestVersion = '1.1.11'
		owaspDepCheckVersion = '1.4.5'
	}
	repositories {
		mavenCentral()

		maven {
			url 'https://plugins.gradle.org/m2/'
		}
		maven {
			url 'http://repo.spring.io/plugins-release'
		}
	}
	dependencies {
		classpath ("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath ("io.spring.gradle:propdeps-plugin:${propDepsVersion}")
		classpath ("info.solidsoft.gradle.pitest:gradle-pitest-plugin:${pitestVersion}")
		classpath ("org.owasp:dependency-check-gradle:${owaspDepCheckVersion}")
	}
}

plugins {
	// Build scan should be first
	// id 'com.gradle.build-scan' version '1.4'

	id "io.spring.dependency-management" version "1.0.0.RELEASE"
	id 'net.saliman.cobertura' version '2.4.0'
	id 'com.github.kt3k.coveralls' version '2.7.1'
	id 'net.researchgate.release' version '2.4.0'
	id 'com.gorylenko.gradle-git-properties' version '1.4.17'
}

apply plugin: 'net.saliman.cobertura'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

configure(allprojects) {

	apply plugin: 'java'

	apply plugin: 'propdeps'
	apply plugin: 'propdeps-maven'
	apply plugin: 'propdeps-idea'
	apply plugin: 'propdeps-eclipse'

	apply plugin: 'maven'
	apply plugin: 'jacoco'
	apply plugin: 'idea'
	apply plugin: 'jdepend'
	apply plugin: 'findbugs'
	apply plugin: 'pmd'
	apply plugin: 'org.owasp.dependencycheck'
	apply plugin: 'net.researchgate.release'
	apply plugin: 'net.saliman.cobertura'
	apply plugin: 'com.github.kt3k.coveralls'
	apply plugin: 'com.gorylenko.gradle-git-properties'
	apply plugin: 'info.solidsoft.pitest'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	findbugs {
		sourceSets = [sourceSets.main, sourceSets.test]
		ignoreFailures = true
	}

	pmd {
		sourceSets = [sourceSets.main, sourceSets.test]
		ignoreFailures = true
	}

	jdepend {
		sourceSets = [sourceSets.main, sourceSets.test]
		ignoreFailures = true
	}

	jacocoTestReport {
		reports {
			xml.enabled = true // coveralls plugin depends on xml format report
			html.enabled = true
		}
	}
}

def frameworkAgnostic = [':application:core', ':application:adapter']
configure(subprojects - frameworkAgnostic.collect { project(it) }) {
	apply plugin: 'io.spring.dependency-management'

	dependencyManagement {
		imports {
			mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
		}
	}
}

configure([project(':application'), project(':app-ui')]) {
	apply plugin: 'org.springframework.boot'
}


ext {
	jcacheVersion = '1.0.0'
	ehcacheVersion = '3.3.1'

	springSecurityTestVersion = '4.2.1.RELEASE'
	junitParamsVersion = '1.1.0'
	meanBeanVersion = '2.0.3'
	equalsVerifierVersion = '2.2.2'
	jsoupVersion = '1.10.2'

	guavaVersion = '21.0'
	commonsLangVersion = '3.5'
	commonsCollectionsVersion = '4.1'
	commonsValidatorVersion = '1.6'
	immutablesVersion = '2.4.6'
	nullableVersion = '3.0.2'

	hashidsVersion = '1.0.1'
	jugVersion = '3.1.4'

	jsonSchemaVersion = '1.0.21'
	jsonSchemaValidatorVersion = '2.2.6'

	logstashLogbackVersion = '4.8'
	janinoVersion = '3.0.6'

	springfoxSwagger2Version = '2.6.1'

	stageMonitorVersion = '0.31.0'
	thymeleafSpringSecurityVersion = '2.1.3.RELEASE'

	webjarsJqueryVersion = '3.1.1-1'
	webjarsBootstrapVersion = '3.3.7-1'
	webjarsLocatorVersion = '0.32'
	webjarsFontAwesomeVersion = '4.7.0'
	webjarsModernizrVersion = '2.8.3'

	jacksonVersion = '2.8.8'

	junitVersion = '4.12'
	assertJVersion = '3.6.2'
	mockitoVersion = '2.7.22'

	cucumberVersion = '1.2.5'
	jsoupVersion = '1.10.2'
}

ext.app_tests = [
		acceptance_test: [
				"info.cukes:cucumber-junit:${cucumberVersion}",
				"info.cukes:cucumber-java8:${cucumberVersion}",
				"info.cukes:cucumber-spring:${cucumberVersion}",
				"org.jsoup:jsoup:${jsoupVersion}"
		],
		integration_test: [
				"com.kjetland:mbknor-jackson-jsonschema_2.12:${jsonSchemaVersion}",
				"com.github.fge:json-schema-validator:${jsonSchemaValidatorVersion}"
		],
		spring_test: [
				"org.springframework.boot:spring-boot-starter-test",
				"org.springframework.security:spring-security-test:${springSecurityTestVersion}"
		],
		unit_test: [
				"junit:junit:${junitVersion}",
				"org.assertj:assertj-core:${assertJVersion}",
				"org.mockito:mockito-core:${mockitoVersion}",
				"nl.jqno.equalsverifier:equalsverifier:${equalsVerifierVersion}",
				"pl.pragmatists:JUnitParams:${junitParamsVersion}"
		]
]

task wrapper(type: Wrapper) {
	gradleVersion = '3.5'
}

apply from: 'gradle/application.gradle'
apply from: 'gradle/test.gradle'
apply from: 'gradle/code-coverage.gradle'

