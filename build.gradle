buildscript {
	ext {
		NEXUS_REPO_URL = 'http://192.168.1.31:8082/nexus/content/repositories'

		springBootVersion = '1.5.3.RELEASE'
		propDepsVersion = '0.0.8'
		pitestVersion = '1.1.11'
		owaspDepCheckVersion = '1.4.5'
	}
	repositories {
		mavenCentral()

		maven {
			url 'https://plugins.gradle.org/m2/'
		}
		maven {
			url 'http://repo.spring.io/plugins-release'
		}
	}
	dependencies {
		classpath ("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath ("io.spring.gradle:propdeps-plugin:${propDepsVersion}")
		classpath ("info.solidsoft.gradle.pitest:gradle-pitest-plugin:${pitestVersion}")
		classpath ("org.owasp:dependency-check-gradle:${owaspDepCheckVersion}")
	}
}

plugins {
	id "io.spring.dependency-management" version "1.0.0.RELEASE"
	id 'net.saliman.cobertura' version '2.4.0'
	id 'com.github.kt3k.coveralls' version '2.7.1'
	id 'net.researchgate.release' version '2.4.0'
	id 'com.gorylenko.gradle-git-properties' version '1.4.17'
}

apply plugin: 'net.saliman.cobertura'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

configure(allprojects) {

	apply plugin: 'java'

	apply plugin: 'propdeps'
	apply plugin: 'propdeps-maven'
	apply plugin: 'propdeps-idea'
	apply plugin: 'propdeps-eclipse'

	apply plugin: 'maven'
	apply plugin: 'idea'
	apply plugin: 'jdepend'
	apply plugin: 'findbugs'
	apply plugin: 'pmd'
	apply plugin: 'org.owasp.dependencycheck'
	apply plugin: 'net.researchgate.release'
	apply plugin: 'com.gorylenko.gradle-git-properties'
	apply plugin: 'info.solidsoft.pitest'

	sourceCompatibility = JavaVersion.VERSION_1_8

	repositories {
		mavenCentral()
	}

	findbugs {
		sourceSets = [sourceSets.main, sourceSets.test]
		ignoreFailures = true
	}

	pmd {
		sourceSets = [sourceSets.main, sourceSets.test]
		ignoreFailures = true
	}

	jdepend {
		sourceSets = [sourceSets.main, sourceSets.test]
		ignoreFailures = true
	}
}

def frameworkAgnostic = [':application:core', ':application:adapter']
configure(subprojects - frameworkAgnostic.collect { project(it) }) {
	apply plugin: 'io.spring.dependency-management'

	dependencyManagement {
		imports {
			mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
		}
	}
}

configure([project(':application'), project(':app-ui')]) {
	apply plugin: 'org.springframework.boot'
}

ext {
	versions = [
        commonsCollections: '4.1',
        commonsLang: '3.5',
        commonsValidator: '1.6',
        guava: '21.0',
        hashids: '1.0.1',
        immutables: '2.4.6',
        jackson: '2.8.8',
        jug: '3.1.4',
        nullableJsr305: '3.0.2',
        springfoxSwagger2: '2.6.1'
	]
    cache_versions = [
        caffeine: '2.5.0',
        ehcache: '3.3.1',
        jcache: '1.0.0'
    ]
    log_versions = [
        janino: '3.0.6',
        logstashLogback: '4.8'
    ]
    ui_versions = [
        stageMonitor: '0.31.0',
        thymeleafSpringSecurity: '2.1.3.RELEASE',
        webjarsBootstrap: '3.3.7-1',
        webjarsFontAwesome: '4.7.0',
        webjarsJquery: '3.1.1-1',
        webjarsLocator: '0.32',
        webjarsModernizr: '2.8.3'
    ]
	test_versions = [
        equalsVerifier: '2.2.2',
        jsoup: '1.10.2',
        junitParams: '1.1.0',
        meanBean: '2.0.3',
        assertJ: '3.6.2',
        cucumber: '1.2.5',
        jsonSchemaValidator: '2.2.6',
        jsonSchema: '1.0.21',
        junit: '4.12',
        mockito: '2.7.22',
        springSecurityTest: '4.2.1.RELEASE'
	]
}

ext.app_tests = [
		acceptance_test: [
            "info.cukes:cucumber-junit:${test_versions.cucumber}",
            "info.cukes:cucumber-java8:${test_versions.cucumber}",
            "info.cukes:cucumber-spring:${test_versions.cucumber}",
            "org.jsoup:jsoup:${test_versions.jsoup}"
		],
		integration_test: [
            "com.kjetland:mbknor-jackson-jsonschema_2.12:${test_versions.jsonSchema}",
            "com.github.fge:json-schema-validator:${test_versions.jsonSchemaValidator}"
		],
		spring_test: [
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.security:spring-security-test:${test_versions.springSecurityTest}"
		],
		unit_test: [
            "junit:junit:${test_versions.junit}",
            "nl.jqno.equalsverifier:equalsverifier:${test_versions.equalsVerifier}",
            "org.assertj:assertj-core:${test_versions.assertJ}",
            "org.mockito:mockito-core:${test_versions.mockito}",
            "pl.pragmatists:JUnitParams:${test_versions.junitParams}"
		]
]

task wrapper(type: Wrapper) {
	gradleVersion = '3.5'
}

apply from: 'gradle/application.gradle'
apply from: 'gradle/test.gradle'
apply from: 'gradle/code-coverage.gradle'

