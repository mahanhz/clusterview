ext {
	jugVersion = '3.1.4'

	logstashLogbackVersion = '4.8'
	janinoVersion = '3.0.6'

	jcacheVersion = '1.0.0'
	ehcacheVersion = '3.2.0'

	googleFindbugsVersion = '3.0.1' // needed for javax.annotation.Nullable

	springfoxSwagger2Version = '2.6.1'

	thymeleafSpringSecurityVersion = '2.1.3.RELEASE'

	webjarsJqueryVersion = '3.1.1-1'
	webjarsBootstrapVersion = '3.3.7-1'
	webjarsLocatorVersion = '0.32'
	webjarsFontAwesomeVersion = '4.7.0'
	webjarsModernizrVersion = '2.8.3'

	immutablesVersion = '2.4.2'

	hashidsVersion = '1.0.1'

	beansvizVersion = '0.1.0'
}

dependencies {
	compile ('org.springframework.boot:spring-boot-starter-actuator')
	compile ('org.springframework.boot:spring-boot-starter-aop')
	compile ('org.springframework.boot:spring-boot-starter-web')
	compile ('org.springframework.boot:spring-boot-starter-cache')
	compile ('org.springframework.boot:spring-boot-starter-data-jpa')
	compile ("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile ("org.springframework.boot:spring-boot-starter-security")
	compile ('org.springframework.boot:spring-boot-starter-hateoas')
	compile ('org.springframework.data:spring-data-rest-hal-browser')

	compile ('org.springframework.boot:spring-boot-actuator-docs')

	compile ("com.h2database:h2")

	compile ('org.springframework.retry:spring-retry')

	compile ("net.logstash.logback:logstash-logback-encoder:${logstashLogbackVersion}")
	compile ("org.codehaus.janino:janino:${janinoVersion}")

	compile ("org.apache.commons:commons-lang3:${commonsLangVersion}")
	compile ("commons-validator:commons-validator:${commonsValidatorVersion}")
	compile ("com.fasterxml.uuid:java-uuid-generator:${jugVersion}")

	compile ("javax.cache:cache-api:${jcacheVersion}")
	compile ("org.ehcache:ehcache:${ehcacheVersion}")

	compile ("com.google.code.findbugs:jsr305:${googleFindbugsVersion}")
	compile ("com.google.guava:guava:${guavaVersion}")

	compile ("org.webjars:jquery:${webjarsJqueryVersion}")
	compile ("org.webjars:bootstrap:${webjarsBootstrapVersion}")
	compile ("org.webjars:font-awesome:${webjarsFontAwesomeVersion}")
	compile ("org.webjars:modernizr:${webjarsModernizrVersion}")
	compile ("org.webjars:webjars-locator:${webjarsLocatorVersion}")

	compile ("io.springfox:springfox-swagger2:${springfoxSwagger2Version}")
	compile ("io.springfox:springfox-swagger-ui:${springfoxSwagger2Version}")

	compile ("org.thymeleaf.extras:thymeleaf-extras-springsecurity4:${thymeleafSpringSecurityVersion}")

	compile ("org.hashids:hashids:${hashidsVersion}")

	compile ("am.ik.beansviz:beansviz-spring-boot-actuator:${beansvizVersion}")

	provided ("org.immutables:value:${immutablesVersion}")

	testCompile ('org.springframework.boot:spring-boot-starter-test')
	testCompile ("org.springframework.security:spring-security-test:${springSecurityTestVersion}")
	testCompile ("pl.pragmatists:JUnitParams:${junitParamsVersion}")
	testCompile ("org.meanbean:meanbean:${meanBeanVersion}")
	testCompile ("nl.jqno.equalsverifier:equalsverifier:${equalsVerifierVersion}")
	testCompile ("org.jsoup:jsoup:${jsoupVersion}")

	optional ("org.springframework.boot:spring-boot-devtools")
}

//sourceSets {
//	main {
//		java {
//			srcDirs 'src/main/java', 'generated'
//		}
//	}
//}


def smokeTests = 'org/amhzing/clusterview/backend/smoketest/**'

test {
	exclude smokeTests
}

task smokeTest(type:Test) {
	include smokeTests
}

pitest {
	targetClasses = ['org.amhzing.clusterview.*']
	excludedClasses = ['org.amhzing.clusterview.smoketest.*']
	outputFormats = ['XML', 'HTML']
}

// Git properties that display in the actuator /info endpoint
gitProperties {
	dateFormat = "yyyy-MM-dd'T'HH:mm:ss.SSSZ z"
	dateFormatTimeZone = "UTC"
}

springBoot {
	mainClass = 'org.amhzing.clusterview.backend.BackendApplication'
	layout = 'NONE'
}

// Make the System.properties available in the bootRun task.
bootRun {
	systemProperties = System.properties
}

jar {
	exclude 'application-*'
	exclude '*.sql'
}
